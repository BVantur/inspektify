package sp.bvantur.inspektify.ktor.details.data.utils

import kotlinx.serialization.json.Json
import sp.bvantur.inspektify.NetworkTrafficDataLocal
import sp.bvantur.inspektify.ktor.core.domain.utils.DateTimeUtils
import sp.bvantur.inspektify.ktor.details.data.mapper.PayloadNetworkTrafficMapper

@Suppress("MaxLineLength")
private const val ICON_BASE_64 =
    ""

@Suppress("LongMethod", "CyclomaticComplexMethod")
internal fun NetworkTrafficDataLocal.toHtml(json: Json): String {
    val logoBase64 = "data:image/png;base64,$ICON_BASE_64"

    fun formatHeaders(headers: Set<Map.Entry<String, List<String>>>?): String = headers?.joinToString("<br>") {
        "<b>${it.key}</b>: ${it.value.joinToString(", ")}"
    } ?: "N/A"

    return """
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Network Traffic Report</title>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; margin: 0; padding: 20px; background-color: #f4f4f4; }
                .container { max-width: 800px; margin: auto; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
                table { width: 100%; border-collapse: collapse; margin-top: 20px; table-layout: fixed; }
                th, td { border: 1px solid #ddd; padding: 12px; text-align: left; word-break: break-all; overflow-wrap: break-word; }
                th { background-color: #f2f2f2; }
                .header { font-size: 24px; font-weight: bold; margin-bottom: 20px; text-align: center; }
                .logo { display: block; margin: 0 auto 20px; max-width: 200px; }
                .section { margin-top: 30px; }
                .section-title { font-size: 18px; font-weight: bold; margin-bottom: 10px; color: #333; }
                pre { white-space: pre; word-wrap: break-word;background-color: #f4f4f4;padding: 10px;border-radius: 5px;overflow-x: auto; max-width: 100%; }
                .highlight { background-color: #e6f3ff; }
            </style>
        </head>
        <body>
            <div class="container">
                <img src="$logoBase64" alt="Inspektify Logo" class="logo">
                <div class="header">Network Traffic Report</div>
                
                <div class="section">
                    <div class="section-title">General Information</div>
                    <table>
                        <tr><th>Method</th><td>${method ?: "N/A"}</td></tr>
                        <tr><th>URL</th><td>${url ?: "N/A"}</td></tr>
                        <tr><th>Host</th><td>${host ?: "N/A"}</td></tr>
                        <tr><th>Path</th><td>${path ?: "N/A"}</td></tr>
                        <tr><th>Protocol</th><td>${protocol ?: "N/A"}</td></tr>
                    </table>
                </div>
                
                <div class="section">
                    <div class="section-title">Request Details</div>
                    <table>
                        <tr><th>Date</th><td>${DateTimeUtils.formatTimestamp(requestTimestamp)}</td></tr>
                        <tr><th>Headers</th><td>${formatHeaders(requestHeaders)}</td></tr>
                        <tr><th>Payload</th>
                        ${
        if (requestPayload.isNullOrBlank()) {
            "<td>N/A</td>"
        } else {
            """
                                   <td><pre><code>${
                PayloadNetworkTrafficMapper.prettyPrintJson(
                    json,
                    requestPayload
                )
            }</code></pre></td> 
            """.trimIndent()
        }
    }
                        </tr>
                        <tr><th>Content Type</th><td>${requestContentType ?: "N/A"}</td></tr>
                        <tr><th>Payload Size</th><td>${requestPayloadSize ?: "N/A"} bytes</td></tr>
                        <tr><th>Headers Size</th><td>${requestHeadersSize ?: "N/A"} bytes</td></tr>
                    </table>
                </div>
                
                <div class="section">
                    <div class="section-title">Response Details</div>
                    <table>
                        <tr><th>Date</th><td>${DateTimeUtils.formatTimestamp(responseTimestamp)}</td></tr>
                        <tr><th>Status</th><td>${responseStatus ?: "N/A"}</td></tr>
                        <tr><th>Status Description</th><td>${responseStatusDescription ?: "N/A"}</td></tr>
                        <tr><th>Headers</th><td>${formatHeaders(responseHeaders)}</td></tr>
                        <tr><th>Payload</th>
                        ${
        if (requestPayload.isNullOrBlank()) {
            "<td>N/A</td>"
        } else {
            """<td><pre><code>${
                PayloadNetworkTrafficMapper.prettyPrintJson(
                    json,
                    responsePayload
                )
            }</code></pre></td>""".trimIndent()
        }
    }
                        </tr>
                        <tr><th>Content Type</th><td>${responseContentType ?: "N/A"}</td></tr>
                        <tr><th>Payload Size</th><td>${responsePayloadSize ?: "N/A"} bytes</td></tr>
                        <tr><th>Headers Size</th><td>${responseHeadersSize ?: "N/A"} bytes</td></tr>
                    </table>
                </div>
                
                <div class="section">
                    <div class="section-title">Performance</div>
                    <table>
                        <tr class="highlight"><th>Duration</th><td>${tookDurationInMs ?: "N/A"} ms</td></tr>
                    </table>
                </div>
            </div>
        </body>
        </html>
    """.trimIndent()
}

internal fun NetworkTrafficDataLocal.toNetworkDetailsName(): String {
    val method = method ?: ""
    val path = path?.replace("/", "-") ?: ""
    val date = DateTimeUtils.formatTimestampForFile(requestTimestamp)
    return "${method}_${path}_$date"
}
